<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2023-01-10 -->

<plugin>
  <name>i18n-maven-plugin</name>
  <description></description>
  <groupId>com.github.zzzj1233</groupId>
  <artifactId>i18n-maven-plugin</artifactId>
  <version>1.0-RELEASE</version>
  <goalPrefix>i18n</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>proto-i18N</goal>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>com.github.zzzj1233.ProtoI18NMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>ENUSCommentPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>英文中文注释前缀
&lt;p&gt;
e.g. {ENUSCommentPrefix}{commentSeparator}i18n英文内容</description>
        </parameter>
        <parameter>
          <name>ZHCNCommentPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>简体中文注释前缀
&lt;p&gt;
e.g. {ZHCNCommentPrefix}{commentSeparator}i18n简体中文内容</description>
        </parameter>
        <parameter>
          <name>ZHTCCommentPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>繁体中文注释前缀
&lt;p&gt;
e.g. {ZHTCCommentPrefix}{commentSeparator}i18n繁体中文内容</description>
        </parameter>
        <parameter>
          <name>clear</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否在执行之前清空i18n文件</description>
        </parameter>
        <parameter>
          <name>commentSeparator</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>注释分隔符
&lt;p&gt;
e.g. zh{commentSeparator}名字</description>
        </parameter>
        <parameter>
          <name>enumName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>proto文件enum的类名</description>
        </parameter>
        <parameter>
          <name>i18nENUS</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>英文的i18n文件
&lt;p&gt;
转换后的英文将会追加到这个文件中</description>
        </parameter>
        <parameter>
          <name>i18nKeyPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>proto文件enum的类名</description>
        </parameter>
        <parameter>
          <name>i18nZHCN</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>中文的i18n文件
&lt;p&gt;
转换后的中文将会追加到这个文件中</description>
        </parameter>
        <parameter>
          <name>i18nZHTC</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>繁体中文的i18n文件
&lt;p&gt;
转换后的繁体中文将会追加到这个文件中</description>
        </parameter>
        <parameter>
          <name>overlap</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否覆盖同名的key
&lt;p&gt;
例如 i18n-language.properties
包含了 name=zzzj
&lt;p&gt;
解析proto文件得到 name=zzzj1233
&lt;p&gt;
是否覆盖之前的 name=zzzj
&lt;p&gt;
使 name=zzzj12333</description>
        </parameter>
        <parameter>
          <name>protoFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>proto文件路径</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否跳过, 既不执行</description>
        </parameter>
        <parameter>
          <name>translation</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>如果未提供繁体中文时, 是否自动将简体中文转换为繁体中文</description>
        </parameter>
      </parameters>
      <configuration>
        <ENUSCommentPrefix implementation="java.lang.String" default-value="en">${comment.enus.prefix}</ENUSCommentPrefix>
        <ZHCNCommentPrefix implementation="java.lang.String" default-value="zh">${comment.zhcn.prefix}</ZHCNCommentPrefix>
        <ZHTCCommentPrefix implementation="java.lang.String" default-value="zhtc">${comment.zhtc.prefix}</ZHTCCommentPrefix>
        <clear implementation="java.lang.Boolean" default-value="true">${i18n.clear}</clear>
        <commentSeparator implementation="java.lang.String" default-value=":">${comment.separator}</commentSeparator>
        <enumName implementation="java.lang.String" default-value="ResultCode">${enum.Name}</enumName>
        <i18nENUS implementation="java.io.File">${i18n.en-us}</i18nENUS>
        <i18nKeyPrefix implementation="java.lang.String" default-value="RESULT_CODE_">${i18n.key.prefix}</i18nKeyPrefix>
        <i18nZHCN implementation="java.io.File">${i18n.zh-cn}</i18nZHCN>
        <i18nZHTC implementation="java.io.File">${i18n.zh-tc}</i18nZHTC>
        <overlap implementation="java.lang.Boolean" default-value="true">${i18n.overlap}</overlap>
        <protoFile implementation="java.io.File">${proto.path}</protoFile>
        <skip implementation="java.lang.Boolean" default-value="false">${skip}</skip>
        <translation implementation="java.lang.Boolean" default-value="true">${translation}</translation>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0.22</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <type>jar</type>
      <version>3.16.1</version>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-parser</artifactId>
      <type>jar</type>
      <version>2.2.27</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <type>jar</type>
      <version>4.7</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <type>jar</type>
      <version>4.7</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <type>jar</type>
      <version>3.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>ST4</artifactId>
      <type>jar</type>
      <version>4.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.abego.treelayout</groupId>
      <artifactId>org.abego.treelayout.core</artifactId>
      <type>jar</type>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <type>jar</type>
      <version>58.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>21.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <type>jar</type>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-multibindings</artifactId>
      <type>jar</type>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-assistedinject</artifactId>
      <type>jar</type>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.25</version>
    </dependency>
  </dependencies>
</plugin>